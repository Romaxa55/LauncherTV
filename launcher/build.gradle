plugins {
    id 'com.android.application'
    id 'com.github.kt3k.coveralls'
    id 'checkstyle'
}

// Укажите версию Kotlin в начале файла
def kotlin_version = '1.8.22'

android {
    namespace "org.cosinus.launchertv"
    compileSdk 34

    defaultConfig {
        applicationId "org.cosinus.launchertv"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 159
        versionName "1.5.9"
    }

    signingConfigs {
        if (project.hasProperty('keystorePassword')) {
            release {
                storeFile file(property('keystoreFile'))
                storePassword property('keystorePassword')
                keyAlias property('keystoreAlias')
                keyPassword property('keystorePassword')
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            proguardFile 'proguard-rules.pro'
            zipAlignEnabled true
            if (project.hasProperty('keystorePassword')) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lint {
        abortOnError true
        lintConfig file('lint.xml')
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Обновите зависимости на AndroidX
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
}

coveralls {
    jacocoReportPath = layout.buildDirectory.file("reports/coverage/debug/report.xml").get().asFile.absolutePath
}

tasks.coveralls {
    dependsOn 'connectedAndroidTest'
    onlyIf { System.env.'CI' }
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    }
}
